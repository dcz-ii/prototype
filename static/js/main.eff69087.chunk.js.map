{"version":3,"sources":["components/Meeting/MeetingList.js","components/ToDo/TodoList.js","constants/meetingGql.js","constants/todoGql.js","models/meetingsModel.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["MeetingList","props","Paper","style","maxWidth","margin","paddingTop","display","flexDirection","justifyContent","alignItems","TextField","label","value","title","onChange","e","handleTitle","target","marginRight","editId","Button","variant","color","onClick","setId","toggleEditMeeting","toggleAddMeeting","Table","TableHead","TableRow","TableCell","TableBody","_","map","sortBy","data","idx","key","hover","has_finished","setView","setMeetingID","id","width","name","moment","created_at","format","toString","preventDefault","stopPropagation","toggleDelete","variables","toggleAddTodo","toggleEditTodo","toggleDeleteTodo","toggleStartMeeting","toggleStopMeeting","useState","setTitle","time","startTime","useEffect","start_time","setInterval","fromNow","position","left","top","meetingID","meetingTime","triggerStart","todoID","todos","is_completed","GET_MEETINGS","gql","ADD_MEETING","EDIT_MEETING","DELETE_MEETING","START_MEETING","END_MEETING","ADD_TODO","EDIT_TODO","DELETE_TODO","store","meetings","selectedMeetingID","addMeetings","Home","observer","useObservable","meetingsModel","view","loadingVal","setloadingVal","useSubscription","onSubscriptionData","client","subscriptionData","toJS","error","loading","useMutation","update","proxy","mutationResult","length","meetingName","message","height","background","zIndex","CircularProgress","TodoList","find","App","className","Boolean","window","location","hostname","match","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wXAgGeA,MApFf,SAAqBC,GAEnB,OACD,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,SAAU,MAAOC,OAAQ,WAAYC,WAAY,KAC/D,yBAAKH,MAAO,CACXI,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,WAEZ,kBAACC,EAAA,EAAD,CACCC,MAAM,QACNC,MAAOZ,EAAMa,MACbC,SAAU,SAAAC,GAAC,OAAIf,EAAMgB,YAAYD,EAAEE,OAAOL,QAC1CV,MAAO,CAACgB,YAAa,MAErBlB,EAAMmB,OACN,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,WACpDvB,EAAMgB,YAAY,IAClBhB,EAAMwB,MAAM,MACZxB,EAAMyB,sBAHP,aAMA,kBAACL,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAAS,WACpCvB,EAAM0B,mBACN1B,EAAMgB,YAAY,MAFnB,aAQF,kBAACW,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,WACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,iBAGF,kBAACC,EAAA,EAAD,KACCC,IAAEC,IAAID,IAAEE,OAAOlC,EAAMmC,KAAK,CAAC,MAAM,CAAC,SAAS,SAACA,EAAMC,GAClD,OACA,kBAACP,EAAA,EAAD,CAAUQ,IAAKD,EAAKE,OAAK,EAACf,QAAS,WAC9BY,EAAKI,eACRvC,EAAMwC,QAAQ,QACdxC,EAAMyC,aAAaN,EAAKO,OAIzB,kBAACZ,EAAA,EAAD,CAAWa,MAAM,OAAOR,EAAKO,IAC7B,kBAACZ,EAAA,EAAD,CAAWa,MAAM,OAAOR,EAAKS,MAC7B,kBAACd,EAAA,EAAD,CAAWa,MAAM,OAAOE,IAAOV,EAAKW,YAAYC,OAAO,kBACvD,kBAACjB,EAAA,EAAD,CAAWa,MAAM,OAAOX,IAAEgB,SAASb,EAAKI,eACxC,kBAACT,EAAA,EAAD,CAAWa,MAAM,OAChB,kBAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,SAACR,GACrDA,EAAEkC,iBACFlC,EAAEmC,kBACFlD,EAAMwB,MAAMW,EAAKO,IACjB1C,EAAMgB,YAAYmB,EAAKS,QAJxB,SASD,kBAACd,EAAA,EAAD,CAAWa,MAAM,OAChB,kBAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,SAACR,GACvDA,EAAEkC,iBACFlC,EAAEmC,kBACFlD,EAAMmD,aAAa,CAAEC,UAAW,CAAEV,GAAIP,EAAKO,QAH5C,mBCuCS3C,MA1Gf,SAAqBC,GAAQ,IACpBmC,EAA0GnC,EAA1GmC,KAAMkB,EAAoGrD,EAApGqD,cAAeC,EAAqFtD,EAArFsD,eAAgBC,EAAqEvD,EAArEuD,iBAAkBf,EAAmDxC,EAAnDwC,QAASgB,EAA0CxD,EAA1CwD,mBAAoBC,EAAsBzD,EAAtByD,kBADjE,EAEDC,mBAAS,IAFR,mBAEpB7C,EAFoB,KAEb8C,EAFa,OAGHD,mBAAS,MAHN,mBAGpBvC,EAHoB,KAGZK,EAHY,OAIDkC,mBAAS,GAJR,mBAIpBE,EAJoB,KAIdC,EAJc,KAsB3B,OAhBAC,qBAAU,WACN3B,EAAK4B,YACPC,aAAY,kBAAMH,EAAUhB,IAAOV,EAAK4B,YAAYE,aAAY,MAejE,kBAAChE,EAAA,EAAD,CAAOC,MAAO,CAACgE,SAAU,WAAY/D,SAAU,MAAOC,OAAQ,WAAYC,WAAY,KACrF,kBAACe,EAAA,EAAD,CACClB,MAAO,CACNgE,SAAU,WACVC,KAAM,GACNC,IAAK,IAEN7C,QAAS,kBAAMiB,EAAQ,aANxB,QAUEL,EAAK4B,WAAkB,4BAAKH,GAAV,GACpB,kBAACxC,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAAS,kBAvBvC,SAAsBY,GACjBA,EAAK4B,YAIRN,EAAkB,CAAEL,UAAW,CAAEiB,UAAWlC,EAAKO,MACjDF,EAAQ,aAJRgB,EAAmB,CAAEJ,UAAW,CAAEkB,YAAazB,MAASE,SAAUsB,UAAWlC,EAAKO,MAClFsB,aAAY,kBAAMH,EAAUhB,MAASoB,aAAY,IAoBNM,CAAapC,KACrDA,EAAK4B,WAA+B,cAAlB,iBAErB,0CACA,yBAAK7D,MAAO,CACXI,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,WAEZ,kBAACC,EAAA,EAAD,CACCC,MAAM,QACNC,MAAOC,EACPC,SAAU,SAAAC,GAAC,OAAI4C,EAAS5C,EAAEE,OAAOL,QACjCV,MAAO,CAACgB,YAAa,MAErBC,EACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,WACpD+B,EAAe,CAAEF,UAAW,CAAEvC,MAAOA,EAAO2D,OAAQrD,KACpDwC,EAAS,IACTnC,EAAM,QAHP,aAMA,kBAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAAS,WACpC8B,EAAc,CAAED,UAAW,CAAEvC,MAAOA,EAAOwD,UAAWlC,EAAKO,MAC3DiB,EAAS,MAFV,aAOF,kBAAChC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,WACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,iBAGF,kBAACC,EAAA,EAAD,KACCC,IAAEC,IAAID,IAAEE,OAAOC,EAAKsC,MAAM,CAAC,MAAM,CAAC,SAAS,SAACtC,EAAMC,GAClD,OACA,kBAACP,EAAA,EAAD,CAAUQ,IAAKD,EAAKE,OAAK,GACxB,kBAACR,EAAA,EAAD,CAAWa,MAAM,OAAOR,EAAKO,IAC7B,kBAACZ,EAAA,EAAD,CAAWa,MAAM,OAAOR,EAAKtB,OAC7B,kBAACiB,EAAA,EAAD,CAAWa,MAAM,OAAOX,IAAEgB,SAASb,EAAKuC,eACxC,kBAAC5C,EAAA,EAAD,CAAWa,MAAM,OAChB,kBAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,WACpDC,EAAMW,EAAKO,IACXiB,EAASxB,EAAKtB,SAFf,SAOD,kBAACiB,EAAA,EAAD,CAAWa,MAAM,OAChB,kBAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WACtDgC,EAAiB,CAAEH,UAAW,CAAEV,GAAIP,EAAKO,QAD1C,mB,kmDCrGA,IAAMiC,EAAeC,IAAH,KAiBZC,EAAcD,IAAH,KAQXE,EAAeF,IAAH,KAQZG,EAAiBH,IAAH,KAQdI,EAAgBJ,IAAH,KAQbK,EAAcL,IAAH,K,ysBCjDjB,IAAMM,EAAWN,IAAH,KAQRO,EAAYP,IAAH,KAQTQ,EAAcR,IAAH,KClBlBS,EAAQ,CACVC,SAAU,GACVC,kBAAmB,KACnBC,YAHU,SAGErD,GACRkD,EAAMC,SAAWnD,IAIVkD,KCqHAI,GAhHFC,aAAS,SAAC1F,GACtB,IAAMqF,EAAQM,YAAcC,IADI,EAGHlC,mBAAS,IAHN,mBAGzB7C,EAHyB,KAGlBG,EAHkB,OAIR0C,mBAAS,WAJD,mBAIzBmC,EAJyB,KAInBrD,EAJmB,OAKIkB,oBAAS,GALb,mBAKzBoC,EALyB,KAKbC,EALa,OAMRrC,mBAAS,MAND,mBAMzBvC,EANyB,KAMjBK,EANiB,OAQPwE,YAAgBrB,EAAc,CACtDsB,mBAAoB,YAAkC,EAA/BC,OAAgC,IAAxBC,EAAuB,EAAvBA,iBAC9Bd,EAAMC,SAAWc,YAAKD,EAAiBhE,KAAKmD,UAC5CS,GAAc,MAHVM,EAR0B,EAQ1BA,MAAOC,EARmB,EAQnBA,QARmB,EAeLC,YAAY1B,EAAa,CACnD2B,OAAQ,SAACC,EAAOC,GACfX,GAAc,IAEf3C,UAAW,CAAEvC,QAAO6B,GAAIV,IAAEgB,SAASoD,YAAKf,EAAMC,UAAUqB,OAAS,MAJ3DjF,EAfyB,sBAsBJ6E,YAAYzB,EAAc,CACrD0B,OAAQ,SAACC,EAAOC,GACfX,GAAc,IAEf3C,UAAW,CAAEwD,YAAa/F,EAAOwD,UAAWlD,KAJtCM,EAtByB,sBA6BH8E,YAAYvB,EAAe,CACvDwB,OAAQ,SAACC,EAAOC,GACfX,GAAc,MAFTvC,EA7ByB,sBAmCJ+C,YAAYtB,EAAa,CACpDuB,OAAQ,SAACC,EAAOC,GACfX,GAAc,MAFTtC,EAnCyB,sBAyCT8C,YAAYxB,EAAgB,CAClDyB,OAAQ,SAACC,EAAOC,GACfX,GAAc,MAFT5C,EAzCyB,sBA+CRoD,YAAYrB,EAAU,CAC7CsB,OAAQ,SAACC,EAAOC,GACfX,GAAc,MAFT1C,EA/CyB,sBAqDPkD,YAAYpB,EAAW,CAC/CqB,OAAQ,SAACC,EAAOC,GACfX,GAAc,MAFTzC,GArDyB,uBA2DLiD,YAAYnB,EAAa,CACnDoB,OAAQ,SAACC,EAAOC,GACfX,GAAc,MAFTxC,GA3DyB,qBAqEhC,OAAI8C,EAAa,UAAN,OAAiBA,EAAMQ,SAGjC,6BACEP,GAAWR,EAAa,yBAAK5F,MAAO,CACpC4G,OAAQ,OACRnE,MAAO,OACPuB,SAAU,WACV5D,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBuG,WAAY,kBACZC,OAAQ,KAER,kBAACC,EAAA,EAAD,OACQ,GACC,YAATpB,EACA,kBAAC,EAAD,CACC1D,KAAMiE,YAAKf,EAAMC,UACjB9D,MAAOA,EACPL,OAAQA,EACRM,kBAAmBA,EACnB0B,aAAcA,EACdzB,iBAAkBA,EAClBV,YAAaA,EACbH,MAAOA,EACP2B,QAASA,EACTC,aA/BJ,SAAuBN,GACtBkD,EAAME,kBAAoBpD,KAgCvB,kBAAC+E,EAAD,CACD/E,KAAMH,IAAEmF,KAAKf,YAAKf,EAAMC,UAAW,CAAC,GAAMc,YAAKf,EAAME,qBACrDlC,cAAeA,EACfE,iBAAkBA,GAClBf,QAASA,EACTc,eAAgBA,GAChBE,mBAAoBA,EACpBC,kBAAmBA,Q,OCzGR2D,OARf,SAAapH,GACX,OACE,yBAAKqH,UAAU,OACb,kBAAC,GAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAiBOxB,GAhBE,IAAIyB,IAAa,CACtBC,KAAM,IAAIC,IAAc,CACtBC,IAAK,4CACLC,QAAS,CACPC,WAAW,KAQfC,MAAO,IAAIC,MAMfC,IAASC,OACP,kBAAC,IAAD,CAAgBlC,OAAQA,IACvB,kBAAC,IAAD,CAAqBA,OAAQA,IAC5B,kBAAC,GAAD,QAIJmC,SAASC,eAAe,SD2FlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.eff69087.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TextField from '@material-ui/core/TextField';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\n\nfunction MeetingList(props) {\n  \n  return (\n\t<Paper style={{maxWidth: '80%', margin: '0px auto', paddingTop: 20}}>\n\t\t<div style={{\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'row',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center'\n\t\t}}>\n\t\t\t<TextField \n\t\t\t\tlabel='Title'\n\t\t\t\tvalue={props.title}\n\t\t\t\tonChange={e => props.handleTitle(e.target.value)}\n\t\t\t\tstyle={{marginRight: 20}}\n\t\t\t/>\n\t\t\t{props.editId ? \n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => {\n\t\t\t\t\tprops.handleTitle('')\n\t\t\t\t\tprops.setId(null)\n\t\t\t\t\tprops.toggleEditMeeting()\n\t\t\t\t}}>EDIT TODO</Button>\n\t\t\t\t:\n\t\t\t\t<Button variant=\"contained\" onClick={() => {\n\t\t\t\t\tprops.toggleAddMeeting()\n\t\t\t\t\tprops.handleTitle('')\n\t\t\t\t}}>ADD TODO</Button>\n\t\t\t}\n\t\t</div>\n\t\t\t\n\n\t\t<Table>\n\t\t\t<TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t\t<TableCell>ID</TableCell>\n\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t<TableCell>Created</TableCell>\n\t\t\t\t\t<TableCell>Finished</TableCell>\n\t\t\t\t\t<TableCell>EDIT</TableCell>\n\t\t\t\t\t<TableCell>DELETE</TableCell>\n\t\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t\t<TableBody>\n\t\t\t{_.map(_.sortBy(props.data,['id'],['asc']), (data, idx) => {\n\t\t\t\treturn(\n\t\t\t\t<TableRow key={idx} hover onClick={() => {\n\t\t\t\t\tif(!data.has_finished) {\n\t\t\t\t\t\tprops.setView('todo')\n\t\t\t\t\t\tprops.setMeetingID(data.id)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TableCell width=\"20%\">{data.id}</TableCell>\n\t\t\t\t\t<TableCell width=\"20%\">{data.name}</TableCell>\n\t\t\t\t\t<TableCell width=\"20%\">{moment(data.created_at).format('MMMM Do, h:mm')}</TableCell>\n\t\t\t\t\t<TableCell width=\"20%\">{_.toString(data.has_finished)}</TableCell>\n\t\t\t\t\t<TableCell width=\"10%\">\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tprops.setId(data.id);\n\t\t\t\t\t\t\tprops.handleTitle(data.name)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tEDIT\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t<TableCell width=\"10%\">\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tprops.toggleDelete({ variables: { id: data.id } });\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</TableCell>\n\t\t\t\t</TableRow>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t</TableBody>\n\t\t</Table>\n\t</Paper>\n  );\n}\n\nexport default MeetingList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TextField from '@material-ui/core/TextField';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\n\nfunction MeetingList(props) {\n\tconst { data, toggleAddTodo, toggleEditTodo, toggleDeleteTodo, setView, toggleStartMeeting, toggleStopMeeting } = props;\n\tconst [title, setTitle] = useState('');\n\tconst [editId, setId] = useState(null);\n\tconst [time, startTime] = useState(0);\n\n\tuseEffect(() => {\n\t\tif(data.start_time) {\n\t\t\tsetInterval(() => startTime(moment(data.start_time).fromNow()), 1)\n\t\t}\n\t})\n\n\tfunction triggerStart(data) {\n\t\tif(!data.start_time) {\n\t\t\ttoggleStartMeeting({ variables: { meetingTime: moment().format(), meetingID: data.id } })\n\t\t\tsetInterval(() => startTime(moment().fromNow()), 1)\n\t\t} else {\n\t\t\ttoggleStopMeeting({ variables: { meetingID: data.id }})\n\t\t\tsetView('meeting')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Paper style={{position: 'relative', maxWidth: '80%', margin: '0px auto', paddingTop: 20}}>\n\t\t\t<Button\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tleft: 10,\n\t\t\t\t\ttop: 20\n\t\t\t\t}}\n\t\t\t\tonClick={() => setView('meeting')}>\n\t\t\t\tBACK\n\t\t\t</Button>\n\n\t\t\t{!data.start_time ? '' : <h2>{time}</h2>}\n\t\t\t<Button variant=\"contained\" onClick={() => triggerStart(data)}>\n\t\t\t\t{!data.start_time ? 'START MEETING' : 'END MEETING'}\n\t\t\t</Button>\n\t\t\t<h1>TODO LISTS</h1>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'row',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center'\n\t\t\t}}>\n\t\t\t\t<TextField \n\t\t\t\t\tlabel='Title'\n\t\t\t\t\tvalue={title}\n\t\t\t\t\tonChange={e => setTitle(e.target.value)}\n\t\t\t\t\tstyle={{marginRight: 20}}\n\t\t\t\t/>\n\t\t\t\t{editId ? \n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => {\n\t\t\t\t\t\ttoggleEditTodo({ variables: { title: title, todoID: editId } })\n\t\t\t\t\t\tsetTitle('')\n\t\t\t\t\t\tsetId(null)\n\t\t\t\t\t}}>EDIT TODO</Button>\n\t\t\t\t\t:\n\t\t\t\t\t<Button variant=\"contained\" onClick={() => {\n\t\t\t\t\t\ttoggleAddTodo({ variables: { title: title, meetingID: data.id } })\n\t\t\t\t\t\tsetTitle('')\n\t\t\t\t\t}}>ADD TODO</Button>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>ID</TableCell>\n\t\t\t\t\t\t<TableCell>Title</TableCell>\n\t\t\t\t\t\t<TableCell>Completed</TableCell>\n\t\t\t\t\t\t<TableCell>EDIT</TableCell>\n\t\t\t\t\t\t<TableCell>DELETE</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t{_.map(_.sortBy(data.todos,['id'],['asc']), (data, idx) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t<TableRow key={idx} hover>\n\t\t\t\t\t\t<TableCell width=\"20%\">{data.id}</TableCell>\n\t\t\t\t\t\t<TableCell width=\"20%\">{data.title}</TableCell>\n\t\t\t\t\t\t<TableCell width=\"20%\">{_.toString(data.is_completed)}</TableCell>\n\t\t\t\t\t\t<TableCell width=\"10%\">\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => {\n\t\t\t\t\t\t\t\tsetId(data.id);\n\t\t\t\t\t\t\t\tsetTitle(data.title)\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tEDIT\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell width=\"10%\">\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => {\n\t\t\t\t\t\t\t\ttoggleDeleteTodo({ variables: { id: data.id } });\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</Paper>\n\t);\n}\n\nexport default MeetingList;\n","import gql from \"graphql-tag\";\n\nexport const GET_MEETINGS = gql`\n    subscription {\n        meetings {\n            id\n            name\n            start_time\n            has_finished\n            created_at\n            todos {\n                id\n                is_completed\n                title\n            }\n        }\n    }\n`;\n\nexport const ADD_MEETING = gql`\n    mutation addMeeting($title: String!, $id: String!) {\n        insert_meetings(objects: {name: $title, id: $id}) {\n            affected_rows\n        }\n    }\n`;\n\nexport const EDIT_MEETING = gql`\n    mutation toggleTodo ($meetingName: String!, $meetingID: Int!){\n        update_meetings(where: {id: {_eq: $meetingID}}, _set: {name: $meetingName}) {\n            affected_rows\n        }\n    }\n  `  \n\nexport const DELETE_MEETING = gql`\n    mutation removeMeeting ($id: String!) {\n        delete_meetings(where: {id: {_eq: $id}}) {\n            affected_rows\n        }\n    }\n`;\n\nexport const START_MEETING = gql`\n    mutation startMeeting ($meetingID: String!, $meetingTime: timestamptz!) {\n        update_meetings(where: {id: {_eq: $meetingID}}, _set: {start_time: $meetingTime}) {\n            affected_rows\n        }\n    }\n`\n\nexport const END_MEETING = gql`\n    mutation startMeeting ($meetingID: String!) {\n        update_meetings(where: {id: {_eq: $meetingID}}, _set: {has_finished: true}) {\n            affected_rows\n        }\n    }\n`\n\n","import gql from \"graphql-tag\";\n\nexport const ADD_TODO = gql`\n    mutation addTodo($title: String!, $meetingID: String!) {\n        insert_todos(objects: {title: $title, meeting_id: $meetingID}) {\n            affected_rows\n          }\n    }\n`;\n\nexport const EDIT_TODO = gql`\n    mutation toggleTodo ($title: String!, $todoID: Int!){\n        update_todos(where: {id: {_eq: $todoID}}, _set: {title: $title}) {\n            affected_rows\n          }\n    }\n  `  \n\nexport const DELETE_TODO = gql`\n    mutation removeTodo ($id: Int!) {\n        delete_todos(where: {id: {_eq: $id}}) {\n            affected_rows\n        }\n    }\n`;\n\n","const store = {\n    meetings: [],\n    selectedMeetingID: null,\n    addMeetings(data) {\n        store.meetings = data;\n    },\n};\n\nexport default store;","import React, { useState } from 'react';\nimport { observer, useObservable } from 'mobx-react-lite';\nimport { useMutation, useSubscription } from \"react-apollo-hooks\";\nimport { toJS } from 'mobx'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport _ from 'lodash';\n\nimport MeetingList from '../../components/Meeting/MeetingList';\nimport TodoList from '../../components/ToDo/TodoList';\nimport { GET_MEETINGS, ADD_MEETING, EDIT_MEETING, DELETE_MEETING, START_MEETING, END_MEETING } from '../../constants/meetingGql';\nimport { ADD_TODO, EDIT_TODO, DELETE_TODO } from '../../constants/todoGql';\nimport meetingsModel from '../../models/meetingsModel';\n\nconst Home = observer((props) => {\n\tconst store = useObservable(meetingsModel);\n\n\tconst [title, handleTitle] = useState('');\n\tconst [view, setView] = useState('meeting');\n\tconst [loadingVal, setloadingVal] = useState(false);\n\tconst [editId, setId] = useState(null);\n\n\tlet { error, loading } = useSubscription(GET_MEETINGS, {\n\t\tonSubscriptionData: ({ client, subscriptionData }) => {\n\t\t\tstore.meetings = toJS(subscriptionData.data.meetings);\n\t\t\tsetloadingVal(false);\n\t\t}\n\t});\n\n\tconst [toggleAddMeeting] = useMutation(ADD_MEETING, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t\tvariables: { title, id: _.toString(toJS(store.meetings).length + 1) }\n\t});\n\t\n\tconst [toggleEditMeeting] = useMutation(EDIT_MEETING, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t\tvariables: { meetingName: title, meetingID: editId }\n\t});\n\n\tconst [toggleStartMeeting] = useMutation(START_MEETING, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t});\n\t\n\tconst [toggleStopMeeting] = useMutation(END_MEETING, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t});\n\n\tconst [toggleDelete] = useMutation(DELETE_MEETING, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t});\n\n\tconst [toggleAddTodo] = useMutation(ADD_TODO, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t});\n\n\tconst [toggleEditTodo] = useMutation(EDIT_TODO, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t});\n\t\n\tconst [toggleDeleteTodo] = useMutation(DELETE_TODO, {\n\t\tupdate: (proxy, mutationResult) => {\n\t\t\tsetloadingVal(true)\n\t\t},\n\t});\n\n\tfunction setMeetingID (data) {\n\t\tstore.selectedMeetingID = data;\n\t}\n\n\tif (error) return `Error! ${error.message}`;\n\t\n\treturn (\n\t\t<div>\n\t\t\t{loading || loadingVal ? <div style={{\n\t\t\t\theight: '100%',\n\t\t\t\twidth: '100%',\n\t\t\t\tposition: 'absolute',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\tbackground: 'rgba(0,0,0,0.4)',\n\t\t\t\tzIndex: 99,\n\t\t\t}}>\n\t\t\t\t<CircularProgress />\n\t\t\t</div> : ''}\n\t\t\t{view === 'meeting' ?\n\t\t\t\t<MeetingList \n\t\t\t\t\tdata={toJS(store.meetings)} \n\t\t\t\t\tsetId={setId}\n\t\t\t\t\teditId={editId}\n\t\t\t\t\ttoggleEditMeeting={toggleEditMeeting}\n\t\t\t\t\ttoggleDelete={toggleDelete}\n\t\t\t\t\ttoggleAddMeeting={toggleAddMeeting}\n\t\t\t\t\thandleTitle={handleTitle}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tsetView={setView}\n\t\t\t\t\tsetMeetingID={setMeetingID}\n\t\t\t\t/>\n\t\t\t: <TodoList \n\t\t\t\tdata={_.find(toJS(store.meetings), {\"id\": toJS(store.selectedMeetingID)})}\n\t\t\t\ttoggleAddTodo={toggleAddTodo}\n\t\t\t\ttoggleDeleteTodo={toggleDeleteTodo}\n\t\t\t\tsetView={setView}\n\t\t\t\ttoggleEditTodo={toggleEditTodo}\n\t\t\t\ttoggleStartMeeting={toggleStartMeeting}\n\t\t\t\ttoggleStopMeeting={toggleStopMeeting}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n})\n\nexport default Home;\n","import React from 'react';\n\nimport Home from './pages/Home';\nimport './App.css';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { WebSocketLink } from 'apollo-link-ws';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst createApolloClient = (authToken) => {\n  return new ApolloClient({\n    link: new WebSocketLink({\n      uri: 'wss://graphql-be.herokuapp.com/v1/graphql',\n      options: {\n        reconnect: true,\n        // connectionParams: {\n        //   headers: {\n        //     Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik9FWTJSVGM1UlVOR05qSXhSRUV5TURJNFFUWXdNekZETWtReU1EQXdSVUV4UVVRM05EazFNQSJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6InVzZXIiLCJ4LWhhc3VyYS1hbGxvd2VkLXJvbGVzIjpbInVzZXIiXSwieC1oYXN1cmEtdXNlci1pZCI6ImF1dGgwfDVkOTZjN2FiZmJmZDllMGRmMWRhOTNhNiJ9LCJuaWNrbmFtZSI6ImRhbmlsbyIsIm5hbWUiOiJkYW5pbG9AbXl0cmFjdGlvbnRvb2xzLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8wNTU5N2RkNjI4MDM1YWZjOTJmNzM1ZGQ2NmIyMmQ5YT9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmRhLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDE5LTEwLTIxVDAxOjQzOjA4LjgyOFoiLCJpc3MiOiJodHRwczovL2dyYXBocWwtdHV0b3JpYWxzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZDk2YzdhYmZiZmQ5ZTBkZjFkYTkzYTYiLCJhdWQiOiJQMzhxbkZvMWxGQVFKcnprdW4tLXdFenFsalZOR2NXVyIsImlhdCI6MTU3MTcyNDQ3MywiZXhwIjoxNTcxNzYwNDczLCJhdF9oYXNoIjoiZDlSS3ZrSUZnSW1MTmtCNWFVMGVxZyIsIm5vbmNlIjoiS09SZlFTWFVxdVlmMW1aaDRENWRNNlBIMklJaH5OWF8ifQ.IbcQCjr81YSv3fXDkfvwQp0J89dXVyxXQlWzjoKaDNXIpJZqqeVqIO0UrFcXC8wtirR8sbcvHh7lhg8f-FimfkC4bEAz4QBKf-ttGJDQhPIuN2bMqaCxDUzDLp28mX_fCxO55tCj-1TCBjRWA5ZS4ahBI96p6I8EEbfdMct-nzZCvIl3dVU3lVyqwOp3IoMR_vpxPnTJJy87xPHd_gS_NVtRJF-1rT4Zo31AChcEuVnyTdCMYvWbBPdgYaqTWyB4MyOMdtJsQ0MoRlmxPXQJOx559fO6i_Ea2jQQtmu9hWaAyVcDhKg2u0vm2hsMMrv_rzz0OYk06yqV-xwv3y-3Jw'\n        //   }\n        // }\n      }\n    }),\n    cache: new InMemoryCache(),\n  });\n };\n\n const client = createApolloClient();\n\nReactDOM.render(\n\t\t<ApolloProvider client={client}>\n\t\t\t<ApolloHooksProvider client={client}>\n\t\t\t\t<App />\n\t\t\t</ApolloHooksProvider>\n\t\t</ApolloProvider>\n\t,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}